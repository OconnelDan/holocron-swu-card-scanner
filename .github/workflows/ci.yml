name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/backend

jobs:
  # ================================
  # Lint y Tests
  # ================================
  test:
    name: 🧪 Test & Lint
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: 🔍 Lint code
        working-directory: ./backend
        run: npm run lint

      - name: 🧪 Run tests
        working-directory: ./backend
        run: npm run test:coverage
        env:
          NODE_ENV: test
          MONGODB_TEST_URI: mongodb://localhost:27017/holocron-swu-test

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

  # ================================
  # Build TypeScript
  # ================================
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: 🏗️ Build TypeScript
        working-directory: ./backend
        run: npm run build

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: backend/dist/
          retention-days: 1

  # ================================
  # Build & Push Docker Image
  # ================================
  docker:
    name: 🐳 Docker Build & Push
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: read
      packages: write

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔐 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📝 Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: 🏗️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  # ================================
  # Security Scan
  # ================================
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: 🔍 Run security audit
        working-directory: ./backend
        run: npm audit --audit-level high

      - name: 🔒 CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: typescript

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 📊 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
